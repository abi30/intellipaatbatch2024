openapi: 3.0.3
info:
  title: eCommerce API
  description: API documentation for the eCommerce application
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /products:
    get:
      summary: Get all products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      requestBody:
        description: Product object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
  /products/{productId}:
    get:
      summary: Get product by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /orders:
    get:
      summary: Get all orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order
      requestBody:
        description: Order object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
  /orders/{orderId}:
    get:
      summary: Get order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address_id:
          type: integer
    Product:
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock_quantity:
          type: integer
        category_id:
          type: integer
        image_url:
          type: string
    Order:
      type: object
      properties:
        order_id:
          type: integer
        user_id:
          type: integer
        order_date:
          type: string
          format: date-time
        status:
          type: string
        total_amount:
          type: number
          format: float
    Address:
      type: object
      properties:
        address_id:
          type: integer
        user_id:
          type: integer
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
    Review:
      type: object
      properties:
        review_id:
          type: integer
        product_id:
          type: integer
        user_id:
          type: integer
        rating:
          type: integer
        comment:
          type: string
        review_date:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        category_id:
          type: integer
        name:
          type: string
        description:
          type: string
    Cart:
      type: object
      properties:
        cart_id:
          type: integer
        user_id:
          type: integer
    CartItem:
      type: object
      properties:
        cart_item_id:
          type: integer
        cart_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
